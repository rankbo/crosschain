{
    "contracts": {
        "d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol": {
            "TopLightBridge": {
                "abi": [
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "unpause",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "paused",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "get_block",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "renounceOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "sync_block",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "pause",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "init_genesis_block",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "anonymous": false,
                        "inputs": [],
                        "name": "Pause",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [],
                        "name": "Unpause",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "name": "previousOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipRenounced",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    }
                ],
                "devdoc": {
                    "methods": {
                        "pause()": {
                            "details": "called by the owner to pause, triggers stopped state"
                        },
                        "renounceOwnership()": {
                            "details": "Allows the current owner to relinquish control of the contract."
                        },
                        "transferOwnership(address)": {
                            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                            "params": {
                                "_newOwner": "The address to transfer ownership to."
                            }
                        },
                        "unpause()": {
                            "details": "called by the owner to unpause, returns to normal state"
                        }
                    }
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "608060405260008054600160a860020a03191633179055610432806100256000396000f3006080604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461009d5780635c975abb146100b457806369a1a596146100dd578063715018a6146100f257806373cc754f146100dd5780638456cb59146101075780638da5cb5b1461011c578063b88b47f81461014d578063f2fde38b14610162575b600080fd5b3480156100a957600080fd5b506100b2610183565b005b3480156100c057600080fd5b506100c961020a565b604080519115158252519081900360200190f35b3480156100e957600080fd5b506100c961022b565b3480156100fe57600080fd5b506100b2610230565b34801561011357600080fd5b506100b261029c565b34801561012857600080fd5b50610131610339565b60408051600160a060020a039092168252519081900360200190f35b34801561015957600080fd5b506100c9610348565b34801561016e57600080fd5b506100b2600160a060020a0360043516610366565b600054600160a060020a0316331461019a57600080fd5b60005474010000000000000000000000000000000000000000900460ff1615156101c357600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600190565b600054600160a060020a0316331461024757600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031633146102b357600080fd5b60005474010000000000000000000000000000000000000000900460ff16156102db57600080fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b60008054600160a060020a0316331461036057600080fd5b50600190565b600054600160a060020a0316331461037d57600080fd5b61038681610389565b50565b600160a060020a038116151561039e57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820f5dd14995b1835f773497782dacbc632360a0e33bf8d2b142a7a0d3203192d3b0029",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA8 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x432 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x98 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x69A1A596 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x73CC754F EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xB88B47F8 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x183 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x230 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x348 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x366 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH21 0x10000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x386 DUP2 PUSH2 0x389 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xf5 0xdd EQ SWAP10 JUMPDEST XOR CALLDATALOAD 0xf7 PUSH20 0x497782DACBC632360A0E33BF8D2B142A7A0D3203 NOT 0x2d EXTCODESIZE STOP 0x29 ",
                        "sourceMap": "271:310:0:-;;;268:5:1;247:26;;-1:-1:-1;;;;;;567:18:2;575:10;567:18;;;271:310:0;;;;;;"
                    },
                    "deployedBytecode": {
                        "linkReferences": {},
                        "object": "6080604052600436106100985763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461009d5780635c975abb146100b457806369a1a596146100dd578063715018a6146100f257806373cc754f146100dd5780638456cb59146101075780638da5cb5b1461011c578063b88b47f81461014d578063f2fde38b14610162575b600080fd5b3480156100a957600080fd5b506100b2610183565b005b3480156100c057600080fd5b506100c961020a565b604080519115158252519081900360200190f35b3480156100e957600080fd5b506100c961022b565b3480156100fe57600080fd5b506100b2610230565b34801561011357600080fd5b506100b261029c565b34801561012857600080fd5b50610131610339565b60408051600160a060020a039092168252519081900360200190f35b34801561015957600080fd5b506100c9610348565b34801561016e57600080fd5b506100b2600160a060020a0360043516610366565b600054600160a060020a0316331461019a57600080fd5b60005474010000000000000000000000000000000000000000900460ff1615156101c357600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600190565b600054600160a060020a0316331461024757600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031633146102b357600080fd5b60005474010000000000000000000000000000000000000000900460ff16156102db57600080fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b60008054600160a060020a0316331461036057600080fd5b50600190565b600054600160a060020a0316331461037d57600080fd5b61038681610389565b50565b600160a060020a038116151561039e57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820f5dd14995b1835f773497782dacbc632360a0e33bf8d2b142a7a0d3203192d3b0029",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x98 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x69A1A596 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x73CC754F EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xB88B47F8 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x183 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x230 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x348 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x366 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH21 0x10000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x386 DUP2 PUSH2 0x389 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xf5 0xdd EQ SWAP10 JUMPDEST XOR CALLDATALOAD 0xf7 PUSH20 0x497782DACBC632360A0E33BF8D2B142A7A0D3203 NOT 0x2d EXTCODESIZE STOP 0x29 ",
                        "sourceMap": "271:310:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:92:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:92:1;;;;;;247:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:26:1;;;;;;;;;;;;;;;;;;;;;;500:78:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:78:0;;;;1001:111:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:2;;;;666:90:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:90:1;;;;238:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:2;;;;;;;;-1:-1:-1;;;;;238:20:2;;;;;;;;;;;;;;314:94:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;314:94:0;;;;1274:103:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:2;-1:-1:-1;;;;;1274:103:2;;;;;838:92:1;719:5:2;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;568:6:1;;;;;;;560:15;;;;;;;;900:5;891:14;;-1:-1:-1;;891:14:1;;;916:9;;;;900:5;916:9;838:92::o;247:26::-;;;;;;;;;:::o;500:78:0:-;566:4;500:78;:::o;1001:111:2:-;719:5;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:2;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:2;;;1001:111::o;666:90:1:-;719:5:2;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;416:6:1;;;;;;;415:7;407:16;;;;;;720:6;:13;;-1:-1:-1;;720:13:1;;;;;744:7;;;;720:6;744:7;666:90::o;238:20:2:-;;;-1:-1:-1;;;;;238:20:2;;:::o;314:94:0:-;372:4;719:5:2;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;-1:-1:-1;396:4:0;314:94;:::o;1274:103:2:-;719:5;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1512:171::-;-1:-1:-1;;;;;1582:23:2;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:2;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:2;-1:-1:-1;;;;;1661:17:2;;;;;;;;;;1512:171::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "214800",
                            "executionCost": "20525",
                            "totalCost": "235325"
                        },
                        "external": {
                            "get_block()": "234",
                            "init_genesis_block()": "646",
                            "owner()": "669",
                            "pause()": "21763",
                            "paused()": "429",
                            "renounceOwnership()": "22138",
                            "sync_block()": "278",
                            "transferOwnership(address)": "22936",
                            "unpause()": "21650"
                        }
                    },
                    "methodIdentifiers": {
                        "get_block()": "69a1a596",
                        "init_genesis_block()": "b88b47f8",
                        "owner()": "8da5cb5b",
                        "pause()": "8456cb59",
                        "paused()": "5c975abb",
                        "renounceOwnership()": "715018a6",
                        "sync_block()": "73cc754f",
                        "transferOwnership(address)": "f2fde38b",
                        "unpause()": "3f4ba83a"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_block\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync_block\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init_genesis_block\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol\":\"TopLightBridge\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol\":{\"keccak256\":\"0x925367a72f53ee33682c710b18171106510b4c8a76b9c0ab058efe3b7ebe5ab8\",\"urls\":[\"bzzr://c0a94cd53ace919dc5739deb2af0dd9c27a73e93f28ae2dfd93ef95077b314dd\"]},\"d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xc7e4c07a9b6ec87a56d4725c53bea9853ebdb36b50e233346da1c19a29f5fcc9\",\"urls\":[\"bzzr://00c60a2ceaeaea22950f100de0da8af10de31f66db76604b3b70c47f883eb570\"]},\"d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]}},\"version\":1}",
                "userdoc": {
                    "methods": {
                        "renounceOwnership()": {
                            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
                        }
                    }
                }
            }
        },
        "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol": {
            "Pausable": {
                "abi": [
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "unpause",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "paused",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "renounceOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "pause",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "anonymous": false,
                        "inputs": [],
                        "name": "Pause",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [],
                        "name": "Unpause",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "name": "previousOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipRenounced",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    }
                ],
                "devdoc": {
                    "methods": {
                        "pause()": {
                            "details": "called by the owner to pause, triggers stopped state"
                        },
                        "renounceOwnership()": {
                            "details": "Allows the current owner to relinquish control of the contract."
                        },
                        "transferOwnership(address)": {
                            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                            "params": {
                                "_newOwner": "The address to transfer ownership to."
                            }
                        },
                        "unpause()": {
                            "details": "called by the owner to unpause, returns to normal state"
                        }
                    },
                    "title": "Pausable"
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "608060405260008054600160a860020a031916331790556103c4806100256000396000f3006080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461007c5780635c975abb14610093578063715018a6146100bc5780638456cb59146100d15780638da5cb5b146100e6578063f2fde38b14610117575b600080fd5b34801561008857600080fd5b50610091610138565b005b34801561009f57600080fd5b506100a86101bf565b604080519115158252519081900360200190f35b3480156100c857600080fd5b506100916101e0565b3480156100dd57600080fd5b5061009161024c565b3480156100f257600080fd5b506100fb6102e9565b60408051600160a060020a039092168252519081900360200190f35b34801561012357600080fd5b50610091600160a060020a03600435166102f8565b600054600160a060020a0316331461014f57600080fd5b60005474010000000000000000000000000000000000000000900460ff16151561017857600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a031633146101f757600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a0316331461026357600080fd5b60005474010000000000000000000000000000000000000000900460ff161561028b57600080fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b600054600160a060020a0316331461030f57600080fd5b6103188161031b565b50565b600160a060020a038116151561033057600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820e360822d738ca070fa875eb576ca43a61db5dc4f2ab4f3d4dd72bad4231644890029",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA8 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x3C4 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x77 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x138 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x24C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH21 0x10000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318 DUP2 PUSH2 0x31B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe3 PUSH1 0x82 0x2d PUSH20 0x8CA070FA875EB576CA43A61DB5DC4F2AB4F3D4DD PUSH19 0xBAD42316448900290000000000000000000000 ",
                        "sourceMap": "177:755:1:-;;;268:5;247:26;;-1:-1:-1;;;;;;567:18:2;575:10;567:18;;;177:755:1;;;;;;"
                    },
                    "deployedBytecode": {
                        "linkReferences": {},
                        "object": "6080604052600436106100775763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633f4ba83a811461007c5780635c975abb14610093578063715018a6146100bc5780638456cb59146100d15780638da5cb5b146100e6578063f2fde38b14610117575b600080fd5b34801561008857600080fd5b50610091610138565b005b34801561009f57600080fd5b506100a86101bf565b604080519115158252519081900360200190f35b3480156100c857600080fd5b506100916101e0565b3480156100dd57600080fd5b5061009161024c565b3480156100f257600080fd5b506100fb6102e9565b60408051600160a060020a039092168252519081900360200190f35b34801561012357600080fd5b50610091600160a060020a03600435166102f8565b600054600160a060020a0316331461014f57600080fd5b60005474010000000000000000000000000000000000000000900460ff16151561017857600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a031633146101f757600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a0316331461026357600080fd5b60005474010000000000000000000000000000000000000000900460ff161561028b57600080fd5b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031681565b600054600160a060020a0316331461030f57600080fd5b6103188161031b565b50565b600160a060020a038116151561033057600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820e360822d738ca070fa875eb576ca43a61db5dc4f2ab4f3d4dd72bad4231644890029",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x77 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3F4BA83A DUP2 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x138 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x24C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH21 0x10000000000000000000000000000000000000000 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318 DUP2 PUSH2 0x31B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe3 PUSH1 0x82 0x2d PUSH20 0x8CA070FA875EB576CA43A61DB5DC4F2AB4F3D4DD PUSH19 0xBAD42316448900290000000000000000000000 ",
                        "sourceMap": "177:755:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:92:1;;;;;;247:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:26:1;;;;;;;;;;;;;;;;;;;;;;1001:111:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:2;;;;666:90:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:90:1;;;;238:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:2;;;;;;;;-1:-1:-1;;;;;238:20:2;;;;;;;;;;;;;;1274:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:2;-1:-1:-1;;;;;1274:103:2;;;;;838:92:1;719:5:2;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;568:6:1;;;;;;;560:15;;;;;;;;900:5;891:14;;-1:-1:-1;;891:14:1;;;916:9;;;;900:5;916:9;838:92::o;247:26::-;;;;;;;;;:::o;1001:111:2:-;719:5;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:2;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:2;;;1001:111::o;666:90:1:-;719:5:2;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;416:6:1;;;;;;;415:7;407:16;;;;;;720:6;:13;;-1:-1:-1;;720:13:1;;;;;744:7;;;;720:6;744:7;666:90::o;238:20:2:-;;;-1:-1:-1;;;;;238:20:2;;:::o;1274:103::-;719:5;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1512:171::-;-1:-1:-1;;;;;1582:23:2;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:2;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:2;-1:-1:-1;;;;;1661:17:2;;;;;;;;;;1512:171::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "192800",
                            "executionCost": "20506",
                            "totalCost": "213306"
                        },
                        "external": {
                            "owner()": "625",
                            "pause()": "21719",
                            "paused()": "429",
                            "renounceOwnership()": "22116",
                            "transferOwnership(address)": "22870",
                            "unpause()": "21650"
                        }
                    },
                    "methodIdentifiers": {
                        "owner()": "8da5cb5b",
                        "pause()": "8456cb59",
                        "paused()": "5c975abb",
                        "renounceOwnership()": "715018a6",
                        "transferOwnership(address)": "f2fde38b",
                        "unpause()": "3f4ba83a"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xc7e4c07a9b6ec87a56d4725c53bea9853ebdb36b50e233346da1c19a29f5fcc9\",\"urls\":[\"bzzr://00c60a2ceaeaea22950f100de0da8af10de31f66db76604b3b70c47f883eb570\"]},\"d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]}},\"version\":1}",
                "userdoc": {
                    "methods": {
                        "renounceOwnership()": {
                            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
                        }
                    }
                }
            }
        },
        "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol": {
            "Ownable": {
                "abi": [
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "renounceOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "name": "previousOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipRenounced",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    }
                ],
                "devdoc": {
                    "methods": {
                        "renounceOwnership()": {
                            "details": "Allows the current owner to relinquish control of the contract."
                        },
                        "transferOwnership(address)": {
                            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
                            "params": {
                                "_newOwner": "The address to transfer ownership to."
                            }
                        }
                    },
                    "title": "Ownable"
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b5060008054600160a060020a0319163317905561020b806100326000396000f3006080604052600436106100565763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a6811461005b5780638da5cb5b14610072578063f2fde38b146100a3575b600080fd5b34801561006757600080fd5b506100706100c4565b005b34801561007e57600080fd5b50610087610130565b60408051600160a060020a039092168252519081900360200190f35b3480156100af57600080fd5b50610070600160a060020a036004351661013f565b600054600160a060020a031633146100db57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600054600160a060020a0316331461015657600080fd5b61015f81610162565b50565b600160a060020a038116151561017757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058203ed70ad3a2e5cb0e3d8b6acf7aa5752ad9c34249b0f7bd9064729061977ff5970029",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x20B DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x715018A6 DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F DUP2 PUSH2 0x162 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 RETURNDATACOPY 0xd7 EXP 0xd3 LOG2 0xe5 0xcb 0xe RETURNDATASIZE DUP12 PUSH11 0xCF7AA5752AD9C34249B0F7 0xbd SWAP1 PUSH5 0x729061977F 0xf5 SWAP8 STOP 0x29 ",
                        "sourceMap": "217:1468:2:-;;;540:50;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;567:5:2;:18;;-1:-1:-1;;;;;;567:18:2;575:10;567:18;;;217:1468;;;;;;"
                    },
                    "deployedBytecode": {
                        "linkReferences": {},
                        "object": "6080604052600436106100565763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a6811461005b5780638da5cb5b14610072578063f2fde38b146100a3575b600080fd5b34801561006757600080fd5b506100706100c4565b005b34801561007e57600080fd5b50610087610130565b60408051600160a060020a039092168252519081900360200190f35b3480156100af57600080fd5b50610070600160a060020a036004351661013f565b600054600160a060020a031633146100db57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600054600160a060020a0316331461015657600080fd5b61015f81610162565b50565b600160a060020a038116151561017757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058203ed70ad3a2e5cb0e3d8b6acf7aa5752ad9c34249b0f7bd9064729061977ff5970029",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x715018A6 DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F DUP2 PUSH2 0x162 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 RETURNDATACOPY 0xd7 EXP 0xd3 LOG2 0xe5 0xcb 0xe RETURNDATASIZE DUP12 PUSH11 0xCF7AA5752AD9C34249B0F7 0xbd SWAP1 PUSH5 0x729061977F 0xf5 SWAP8 STOP 0x29 ",
                        "sourceMap": "217:1468:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:2;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:2;;;;;;;;-1:-1:-1;;;;;238:20:2;;;;;;;;;;;;;;1274:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:2;-1:-1:-1;;;;;1274:103:2;;;;;1001:111;719:5;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:2;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:2;;;1001:111::o;238:20::-;;;-1:-1:-1;;;;;238:20:2;;:::o;1274:103::-;719:5;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1512:171::-;-1:-1:-1;;;;;1582:23:2;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:2;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:2;-1:-1:-1;;;;;1661:17:2;;;;;;;;;;1512:171::o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "104600",
                            "executionCost": "20445",
                            "totalCost": "125045"
                        },
                        "external": {
                            "owner()": "559",
                            "renounceOwnership()": "22072",
                            "transferOwnership(address)": "22804"
                        },
                        "internal": {
                            "_transferOwnership(address)": "22241"
                        }
                    },
                    "methodIdentifiers": {
                        "owner()": "8da5cb5b",
                        "renounceOwnership()": "715018a6",
                        "transferOwnership(address)": "f2fde38b"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]}},\"version\":1}",
                "userdoc": {
                    "methods": {
                        "renounceOwnership()": {
                            "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
                        }
                    }
                }
            }
        }
    },
    "errors": [
        {
            "component": "general",
            "formattedMessage": "d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol:7:5: Warning: Function state mutability can be restricted to view\n    function init_genesis_block() onlyOwner external returns (bool) {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
            "message": "Function state mutability can be restricted to view",
            "severity": "warning",
            "sourceLocation": {
                "end": 408,
                "file": "d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol",
                "start": 314
            },
            "type": "Warning"
        },
        {
            "component": "general",
            "formattedMessage": "d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol:11:5: Warning: Function state mutability can be restricted to pure\n    function sync_block() external returns (bool) {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
            "message": "Function state mutability can be restricted to pure",
            "severity": "warning",
            "sourceLocation": {
                "end": 492,
                "file": "d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol",
                "start": 416
            },
            "type": "Warning"
        },
        {
            "component": "general",
            "formattedMessage": "d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol:15:5: Warning: Function state mutability can be restricted to pure\n    function get_block() public view returns (bool) {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
            "message": "Function state mutability can be restricted to pure",
            "severity": "warning",
            "sourceLocation": {
                "end": 578,
                "file": "d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol",
                "start": 500
            },
            "type": "Warning"
        }
    ],
    "sources": {
        "d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol": {
            "ast": {
                "absolutePath": "d:/workspace/topnetwork/github/crosschain/contracts/Top/TopLightBridge.sol",
                "exportedSymbols": {
                    "TopLightBridge": [
                        32
                    ]
                },
                "id": 33,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.4",
                            ".17",
                            "<",
                            "0.9",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:32:0"
                    },
                    {
                        "absolutePath": "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol",
                        "file": "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol",
                        "id": 2,
                        "nodeType": "ImportDirective",
                        "scope": 33,
                        "sourceUnit": 179,
                        "src": "36:114:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol",
                        "file": "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol",
                        "id": 3,
                        "nodeType": "ImportDirective",
                        "scope": 33,
                        "sourceUnit": 93,
                        "src": "152:115:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "baseContracts": [
                            {
                                "arguments": null,
                                "baseName": {
                                    "contractScope": null,
                                    "id": 4,
                                    "name": "Pausable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 92,
                                    "src": "298:8:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Pausable_$92",
                                        "typeString": "contract Pausable"
                                    }
                                },
                                "id": 5,
                                "nodeType": "InheritanceSpecifier",
                                "src": "298:8:0"
                            }
                        ],
                        "contractDependencies": [
                            178,
                            92
                        ],
                        "contractKind": "contract",
                        "documentation": null,
                        "fullyImplemented": true,
                        "id": 32,
                        "linearizedBaseContracts": [
                            32,
                            92,
                            178
                        ],
                        "name": "TopLightBridge",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "body": {
                                    "id": 14,
                                    "nodeType": "Block",
                                    "src": "378:30:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "hexValue": "74727565",
                                                "id": 12,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "396:4:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 11,
                                            "id": 13,
                                            "nodeType": "Return",
                                            "src": "389:11:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 15,
                                "implemented": true,
                                "isConstructor": false,
                                "isDeclaredConst": false,
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 8,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 7,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 126,
                                            "src": "344:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "344:9:0"
                                    }
                                ],
                                "name": "init_genesis_block",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 6,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "341:2:0"
                                },
                                "payable": false,
                                "returnParameters": {
                                    "id": 11,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 10,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 15,
                                            "src": "372:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 9,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "372:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "371:6:0"
                                },
                                "scope": 32,
                                "src": "314:94:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 22,
                                    "nodeType": "Block",
                                    "src": "462:30:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "hexValue": "74727565",
                                                "id": 20,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "480:4:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 19,
                                            "id": 21,
                                            "nodeType": "Return",
                                            "src": "473:11:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 23,
                                "implemented": true,
                                "isConstructor": false,
                                "isDeclaredConst": false,
                                "modifiers": [],
                                "name": "sync_block",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 16,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "435:2:0"
                                },
                                "payable": false,
                                "returnParameters": {
                                    "id": 19,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 18,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 23,
                                            "src": "456:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 17,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "456:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "455:6:0"
                                },
                                "scope": 32,
                                "src": "416:76:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 30,
                                    "nodeType": "Block",
                                    "src": "548:30:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "hexValue": "74727565",
                                                "id": 28,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "566:4:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            "functionReturnParameters": 27,
                                            "id": 29,
                                            "nodeType": "Return",
                                            "src": "559:11:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 31,
                                "implemented": true,
                                "isConstructor": false,
                                "isDeclaredConst": true,
                                "modifiers": [],
                                "name": "get_block",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 24,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "518:2:0"
                                },
                                "payable": false,
                                "returnParameters": {
                                    "id": 27,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 26,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 31,
                                            "src": "542:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 25,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "542:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "541:6:0"
                                },
                                "scope": 32,
                                "src": "500:78:0",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            }
                        ],
                        "scope": 33,
                        "src": "271:310:0"
                    }
                ],
                "src": "0:582:0"
            },
            "id": 0
        },
        "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol": {
            "ast": {
                "absolutePath": "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol",
                "exportedSymbols": {
                    "Pausable": [
                        92
                    ]
                },
                "id": 93,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 34,
                        "literals": [
                            "solidity",
                            "^",
                            "0.4",
                            ".24"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:24:1"
                    },
                    {
                        "absolutePath": "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol",
                        "file": "../ownership/Ownable.sol",
                        "id": 35,
                        "nodeType": "ImportDirective",
                        "scope": 93,
                        "sourceUnit": 179,
                        "src": "27:34:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "baseContracts": [
                            {
                                "arguments": null,
                                "baseName": {
                                    "contractScope": null,
                                    "id": 36,
                                    "name": "Ownable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 178,
                                    "src": "198:7:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Ownable_$178",
                                        "typeString": "contract Ownable"
                                    }
                                },
                                "id": 37,
                                "nodeType": "InheritanceSpecifier",
                                "src": "198:7:1"
                            }
                        ],
                        "contractDependencies": [
                            178
                        ],
                        "contractKind": "contract",
                        "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
                        "fullyImplemented": true,
                        "id": 92,
                        "linearizedBaseContracts": [
                            92,
                            178
                        ],
                        "name": "Pausable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "anonymous": false,
                                "documentation": null,
                                "id": 39,
                                "name": "Pause",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 38,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "221:2:1"
                                },
                                "src": "210:14:1"
                            },
                            {
                                "anonymous": false,
                                "documentation": null,
                                "id": 41,
                                "name": "Unpause",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 40,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "240:2:1"
                                },
                                "src": "227:16:1"
                            },
                            {
                                "constant": false,
                                "id": 44,
                                "name": "paused",
                                "nodeType": "VariableDeclaration",
                                "scope": 92,
                                "src": "247:26:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                },
                                "typeName": {
                                    "id": 42,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "247:4:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    }
                                },
                                "value": {
                                    "argumentTypes": null,
                                    "hexValue": "66616c7365",
                                    "id": 43,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "268:5:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "value": "false"
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 52,
                                    "nodeType": "Block",
                                    "src": "401:34:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 48,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "415:7:1",
                                                        "subExpression": {
                                                            "argumentTypes": null,
                                                            "id": 47,
                                                            "name": "paused",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 44,
                                                            "src": "416:6:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 46,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        196,
                                                        197
                                                    ],
                                                    "referencedDeclaration": 196,
                                                    "src": "407:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 49,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "407:16:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 50,
                                            "nodeType": "ExpressionStatement",
                                            "src": "407:16:1"
                                        },
                                        {
                                            "id": 51,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "429:1:1"
                                        }
                                    ]
                                },
                                "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
                                "id": 53,
                                "name": "whenNotPaused",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 45,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "398:2:1"
                                },
                                "src": "376:59:1",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 60,
                                    "nodeType": "Block",
                                    "src": "554:33:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 56,
                                                        "name": "paused",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 44,
                                                        "src": "568:6:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 55,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        196,
                                                        197
                                                    ],
                                                    "referencedDeclaration": 196,
                                                    "src": "560:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 57,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "560:15:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 58,
                                            "nodeType": "ExpressionStatement",
                                            "src": "560:15:1"
                                        },
                                        {
                                            "id": 59,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "581:1:1"
                                        }
                                    ]
                                },
                                "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
                                "id": 61,
                                "name": "whenPaused",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 54,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "551:2:1"
                                },
                                "src": "532:55:1",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 75,
                                    "nodeType": "Block",
                                    "src": "714:42:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 70,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 68,
                                                    "name": "paused",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 44,
                                                    "src": "720:6:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 69,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "729:4:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "720:13:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 71,
                                            "nodeType": "ExpressionStatement",
                                            "src": "720:13:1"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 72,
                                                    "name": "Pause",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 39,
                                                    "src": "744:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                                                        "typeString": "function ()"
                                                    }
                                                },
                                                "id": 73,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "744:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 74,
                                            "nodeType": "EmitStatement",
                                            "src": "739:12:1"
                                        }
                                    ]
                                },
                                "documentation": "@dev called by the owner to pause, triggers stopped state",
                                "id": 76,
                                "implemented": true,
                                "isConstructor": false,
                                "isDeclaredConst": false,
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 64,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 63,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 126,
                                            "src": "690:9:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "690:9:1"
                                    },
                                    {
                                        "arguments": null,
                                        "id": 66,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 65,
                                            "name": "whenNotPaused",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 53,
                                            "src": "700:13:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "700:13:1"
                                    }
                                ],
                                "name": "pause",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 62,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "680:2:1"
                                },
                                "payable": false,
                                "returnParameters": {
                                    "id": 67,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "714:0:1"
                                },
                                "scope": 92,
                                "src": "666:90:1",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 90,
                                    "nodeType": "Block",
                                    "src": "885:45:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 85,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 83,
                                                    "name": "paused",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 44,
                                                    "src": "891:6:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 84,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "900:5:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "891:14:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 86,
                                            "nodeType": "ExpressionStatement",
                                            "src": "891:14:1"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 87,
                                                    "name": "Unpause",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 41,
                                                    "src": "916:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                                                        "typeString": "function ()"
                                                    }
                                                },
                                                "id": 88,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "916:9:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 89,
                                            "nodeType": "EmitStatement",
                                            "src": "911:14:1"
                                        }
                                    ]
                                },
                                "documentation": "@dev called by the owner to unpause, returns to normal state",
                                "id": 91,
                                "implemented": true,
                                "isConstructor": false,
                                "isDeclaredConst": false,
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 79,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 78,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 126,
                                            "src": "864:9:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "864:9:1"
                                    },
                                    {
                                        "arguments": null,
                                        "id": 81,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 80,
                                            "name": "whenPaused",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61,
                                            "src": "874:10:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "874:10:1"
                                    }
                                ],
                                "name": "unpause",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 77,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "854:2:1"
                                },
                                "payable": false,
                                "returnParameters": {
                                    "id": 82,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "885:0:1"
                                },
                                "scope": 92,
                                "src": "838:92:1",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            }
                        ],
                        "scope": 93,
                        "src": "177:755:1"
                    }
                ],
                "src": "0:933:1"
            },
            "id": 1
        },
        "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol": {
            "ast": {
                "absolutePath": "d:/workspace/topnetwork/github/crosschain/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol",
                "exportedSymbols": {
                    "Ownable": [
                        178
                    ]
                },
                "id": 179,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 94,
                        "literals": [
                            "solidity",
                            "^",
                            "0.4",
                            ".24"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:24:2"
                    },
                    {
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
                        "fullyImplemented": true,
                        "id": 178,
                        "linearizedBaseContracts": [
                            178
                        ],
                        "name": "Ownable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "id": 96,
                                "name": "owner",
                                "nodeType": "VariableDeclaration",
                                "scope": 178,
                                "src": "238:20:2",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 95,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "238:7:2",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "anonymous": false,
                                "documentation": null,
                                "id": 100,
                                "name": "OwnershipRenounced",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 99,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 98,
                                            "indexed": true,
                                            "name": "previousOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 100,
                                            "src": "289:29:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 97,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "289:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "288:31:2"
                                },
                                "src": "264:56:2"
                            },
                            {
                                "anonymous": false,
                                "documentation": null,
                                "id": 106,
                                "name": "OwnershipTransferred",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 105,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 102,
                                            "indexed": true,
                                            "name": "previousOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 106,
                                            "src": "355:29:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 101,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "355:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 104,
                                            "indexed": true,
                                            "name": "newOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 106,
                                            "src": "390:24:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 103,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "390:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "349:69:2"
                                },
                                "src": "323:96:2"
                            },
                            {
                                "body": {
                                    "id": 114,
                                    "nodeType": "Block",
                                    "src": "561:29:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 112,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 109,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 96,
                                                    "src": "567:5:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 110,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 193,
                                                        "src": "575:3:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 111,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "575:10:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "567:18:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 113,
                                            "nodeType": "ExpressionStatement",
                                            "src": "567:18:2"
                                        }
                                    ]
                                },
                                "documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.",
                                "id": 115,
                                "implemented": true,
                                "isConstructor": true,
                                "isDeclaredConst": false,
                                "modifiers": [],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 107,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "551:2:2"
                                },
                                "payable": false,
                                "returnParameters": {
                                    "id": 108,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "561:0:2"
                                },
                                "scope": 178,
                                "src": "540:50:2",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 125,
                                    "nodeType": "Block",
                                    "src": "691:46:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 121,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "id": 118,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 193,
                                                                "src": "705:3:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 119,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "705:10:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "id": 120,
                                                            "name": "owner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 96,
                                                            "src": "719:5:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "705:19:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 117,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        196,
                                                        197
                                                    ],
                                                    "referencedDeclaration": 196,
                                                    "src": "697:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 122,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "697:28:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 123,
                                            "nodeType": "ExpressionStatement",
                                            "src": "697:28:2"
                                        },
                                        {
                                            "id": 124,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "731:1:2"
                                        }
                                    ]
                                },
                                "documentation": "@dev Throws if called by any account other than the owner.",
                                "id": 126,
                                "name": "onlyOwner",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 116,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "688:2:2"
                                },
                                "src": "670:67:2",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 141,
                                    "nodeType": "Block",
                                    "src": "1047:65:2",
                                    "statements": [
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 132,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 96,
                                                        "src": "1077:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 131,
                                                    "name": "OwnershipRenounced",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 100,
                                                    "src": "1058:18:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 133,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1058:25:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 134,
                                            "nodeType": "EmitStatement",
                                            "src": "1053:30:2"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 139,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 135,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 96,
                                                    "src": "1089:5:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                        {
                                                            "argumentTypes": null,
                                                            "hexValue": "30",
                                                            "id": 137,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1105:1:2",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 136,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1097:7:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": "address"
                                                    },
                                                    "id": 138,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1097:10:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1089:18:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 140,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1089:18:2"
                                        }
                                    ]
                                },
                                "documentation": "@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.",
                                "id": 142,
                                "implemented": true,
                                "isConstructor": false,
                                "isDeclaredConst": false,
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 129,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 128,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 126,
                                            "src": "1037:9:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1037:9:2"
                                    }
                                ],
                                "name": "renounceOwnership",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 127,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1027:2:2"
                                },
                                "payable": false,
                                "returnParameters": {
                                    "id": 130,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1047:0:2"
                                },
                                "scope": 178,
                                "src": "1001:111:2",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 153,
                                    "nodeType": "Block",
                                    "src": "1337:40:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 150,
                                                        "name": "_newOwner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 144,
                                                        "src": "1362:9:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 149,
                                                    "name": "_transferOwnership",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 177,
                                                    "src": "1343:18:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                        "typeString": "function (address)"
                                                    }
                                                },
                                                "id": 151,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1343:29:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 152,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1343:29:2"
                                        }
                                    ]
                                },
                                "documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.",
                                "id": 154,
                                "implemented": true,
                                "isConstructor": false,
                                "isDeclaredConst": false,
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 147,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 146,
                                            "name": "onlyOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 126,
                                            "src": "1327:9:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1327:9:2"
                                    }
                                ],
                                "name": "transferOwnership",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 145,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 144,
                                            "name": "_newOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 154,
                                            "src": "1301:17:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 143,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1301:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1300:19:2"
                                },
                                "payable": false,
                                "returnParameters": {
                                    "id": 148,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1337:0:2"
                                },
                                "scope": 178,
                                "src": "1274:103:2",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 176,
                                    "nodeType": "Block",
                                    "src": "1568:115:2",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 164,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "id": 160,
                                                            "name": "_newOwner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 156,
                                                            "src": "1582:9:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                                {
                                                                    "argumentTypes": null,
                                                                    "hexValue": "30",
                                                                    "id": 162,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "1603:1:2",
                                                                    "subdenomination": null,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 161,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "1595:7:2",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": "address"
                                                            },
                                                            "id": 163,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1595:10:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "1582:23:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 159,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        196,
                                                        197
                                                    ],
                                                    "referencedDeclaration": 196,
                                                    "src": "1574:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 165,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1574:32:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 166,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1574:32:2"
                                        },
                                        {
                                            "eventCall": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 168,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 96,
                                                        "src": "1638:5:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 169,
                                                        "name": "_newOwner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 156,
                                                        "src": "1645:9:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 167,
                                                    "name": "OwnershipTransferred",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 106,
                                                    "src": "1617:20:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 170,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1617:38:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 171,
                                            "nodeType": "EmitStatement",
                                            "src": "1612:43:2"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 174,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 172,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 96,
                                                    "src": "1661:5:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 173,
                                                    "name": "_newOwner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 156,
                                                    "src": "1669:9:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1661:17:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 175,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1661:17:2"
                                        }
                                    ]
                                },
                                "documentation": "@dev Transfers control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.",
                                "id": 177,
                                "implemented": true,
                                "isConstructor": false,
                                "isDeclaredConst": false,
                                "modifiers": [],
                                "name": "_transferOwnership",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 157,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 156,
                                            "name": "_newOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 177,
                                            "src": "1540:17:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 155,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1540:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1539:19:2"
                                },
                                "payable": false,
                                "returnParameters": {
                                    "id": 158,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1568:0:2"
                                },
                                "scope": 178,
                                "src": "1512:171:2",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 179,
                        "src": "217:1468:2"
                    }
                ],
                "src": "0:1686:2"
            },
            "id": 2
        }
    }
}